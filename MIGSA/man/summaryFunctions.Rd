% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/summaryFunctions.R
\docType{methods}
\name{summary}
\alias{summary}
\alias{summary.SEAparams}
\alias{summary,SEAparams-method}
\alias{summary.GSEAparams}
\alias{summary,GSEAparams-method}
\alias{summary.IGSAinput}
\alias{summary,IGSAinput-method}
\alias{summary.MIGSAres}
\alias{summary,MIGSAres-method}
\title{Summary functions for some MIGSA classes}
\usage{
\method{summary}{SEAparams}(object, ...)

\method{summary}{GSEAparams}(object, ...)

\method{summary}{IGSAinput}(object, ...)

\method{summary}{MIGSAres}(object, ...)
}
\arguments{
\item{object}{SEAparams, GSEAparams, IGSAinput or MIGSAres object.}

\item{...}{not in use.}
}
\value{
A summary of the object.
}
\description{
R base summary overwritten functions to manipulate MIGSA objects.
}
\examples{
## Lets get the summary of the default SEAparams object
seaParams <- SEAparams();
summary(seaParams);

## Lets get the summary of the default GSEAparams object
gseaParams <- GSEAparams();
summary(gseaParams);

## Lets create a basic valid IGSAinput object to get its summary.
## First create a expression matrix.
maData <- matrix(rnorm(10000),ncol=4);
rownames(maData) <- 1:nrow(maData); # It must have rownames (gene names).
maExprData <- new("MAList",list(M=maData));

## Now lets create the FitOptions object.
myFOpts <- FitOptions(c("Cond1", "Cond1", "Cond2", "Cond2"));

## And now we can create our IGSAinput ready for MIGSA.
igsaInput <- IGSAinput(name="myIgsaInput", expr_data=maExprData, 
fit_options=myFOpts);
summary(igsaInput);

## Now lets get the summary of out migsaRes data object.
data(migsaRes);

### As enrichment cutoff is not set then we will get for each experiment the 
### number of enriched gene sets at different cutoff values.
summary(migsaRes);

### Lets set the enrichment cutoff at 0.01
migsaResWCoff <- setEnrCutoff(migsaRes, 0.01);

### Now as summary we will get the number of enriched gene sets per 
### experiment and their intersections.
summary(migsaResWCoff);

}
